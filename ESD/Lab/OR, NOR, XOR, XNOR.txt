-----------------------------------------------------------------------------------------
// OR Gate

module or_gate (
    input a,
    input b,
    output y
);
assign y = a | b; // OR operation
endmodule

module testbench_or;
reg a, b;
wire y;

or_gate uut (.a(a), .b(b), .y(y));

initial begin
    $monitor("a=%b | b=%b | y=%b", a, b, y);
    a = 0; b = 0; #10;
    a = 0; b = 1; #10;
    a = 1; b = 0; #10;
    a = 1; b = 1; #10;
    $finish;
end
endmodule

-----------------------------------------------------------------------------------------
// NOR Gate

module nor_gate (
    input a,
    input b,
    output y
);
assign y = ~(a | b); // NOR operation
endmodule

module testbench_nor;
reg a, b;
wire y;

nor_gate uut (.a(a), .b(b), .y(y));

initial begin
    $monitor("a=%b | b=%b | y=%b", a, b, y);
    a = 0; b = 0; #10;
    a = 0; b = 1; #10;
    a = 1; b = 0; #10;
    a = 1; b = 1; #10;
    $finish;
end
endmodule

-----------------------------------------------------------------------------------------
// XOR Gate

module xor_gate (
    input a,
    input b,
    output y
);
assign y = a ^ b; // XOR operation
endmodule

module testbench_xor;
reg a, b;
wire y;

xor_gate uut (.a(a), .b(b), .y(y));

initial begin
    $monitor("a=%b | b=%b | y=%b", a, b, y);
    a = 0; b = 0; #10;
    a = 0; b = 1; #10;
    a = 1; b = 0; #10;
    a = 1; b = 1; #10;
    $finish;
end
endmodule

-----------------------------------------------------------------------------------------
// XNOR Gate

module xnor_gate (
    input a,
    input b,
    output y
);
assign y = ~(a ^ b);
endmodule

module testbench_xnor;
reg a, b;
wire y;

xnor_gate uut (.a(a), .b(b), .y(y));

initial begin 
   $monitor("a=%b | b=%b | y=%b", a, b, y); 
   a=0;b=0;#10;a=0;b=1;#10;a=1;b=0;#10;a=1;b=1;#10;$finish; 
end 
endmodule
